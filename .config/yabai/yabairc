#!/usr/bin/env sh
#YABAI STUFF

# bsp or float (default: bsp)
#yabai -m config layout bsp

# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# global settings
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          autofocus
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config window_shadow                float
yabai -m config window_opacity               off
# yabai -m config window_opacity_duration      0.0
# yabai -m config active_window_opacity        1.0
# yabai -m config normal_window_opacity        0.90
# yabai -m config external_bar main:25:0
yabai -m config window_border                off
yabai -m config window_border_width          2
yabai -m config active_window_border_color   0xff17e8ff
yabai -m config normal_window_border_color   0xff555555
yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off
yabai -m config mouse_modifier                fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

## Change how yabai looks
yabai -m config layout bsp
yabai -m config top_padding 26
yabai -m config bottom_padding 6
yabai -m config left_padding 6
yabai -m config right_padding 6
yabai -m config window_gap 6

# My custom space names for my 3 monitor setup. These names are used in some of my scripts.
yabai -m space 1 --label one
yabai -m space 2 --label two
yabai -m space 3 --label three
yabai -m space 4 --label four
yabai -m space 5 --label five
yabai -m space 6 --label six
yabai -m space 9 --label nine

# float system preferences. Most of these just disable Yabai form resizing them.
yabai -m rule --add app="^System Preferences$" layer=above manage=off
yabai -m rule --add app="^Karabiner-Elements$" layer=above manage=off
yabai -m rule --add app="^Karabiner-EventViewer$" sticky=on layer=above manage=off
yabai -m rule --add app="^Finder$" sticky=on layer=above manage=off
yabai -m rule --add app="^Alfred Preferences$" layer=above manage=off
yabai -m rule --add app="^Disk Utility$" layer=above manage=off
yabai -m rule --add app="^System Information$" layer=above manage=off
yabai -m rule --add app="^Activity Monitor$" layer=above manage=off
yabai -m rule --add app="^Path Finder$" manage=off
yabai -m rule --add app="^TeamViewer$" sticky=off layer=above manage=off
yabai -m rule --add app="Fantastical" manage=off
yabai -m rule --add app="^Spotify$" manage=off
# yabai -m rule --add app="^iTerm2$" manage=off
yabai -m rule --add app="^Flux$" manage=off
yabai -m rule --add app="^console$" manage=off
yabai -m rule --add app="^Logi Options$" manage=off
yabai -m rule --add app="^Cisco Webex Start$" manage=off
yabai -m rule --add app="^Mos$" layer=above manage=off
yabai -m rule --add app="^Reminders$" layer=above manage=off
yabai -m rule --add app="^Messages$" layer=above manage=off
yabai -m rule --add app="^Things$" manage=off
yabai -m rule --add app="^Mem Helper$" manage=off layer=above

# signals
# yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
#yabai -m signal --add event=space_changed action="yabai -m window --focus $(yabai -m query --windows --window | jq ".id")"
# yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

#testing signals
# yabai -m signal --add event=window_destroyed action="terminal-notifier -message 'window_destroyed'"
# yabai -m signal --add event=application_terminated action="terminal-notifier -message 'application_terminated'"

## If I close the active window, focus on any other visible window.
yabai -m signal --add event=window_destroyed action="bash /Users/ben/.config/yabai/window-focus-on-destroy.sh"
# yabai -m signal --add event=space_changed action="export CUR_ACTIVE_APP=\"iTerm2\""

echo "yabai configuration loaded.."

#END
